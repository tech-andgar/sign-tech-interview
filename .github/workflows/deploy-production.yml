name: Deploy Production

on:
  push:
    branches:
      - main
  # Allow manual workflow execution
  workflow_dispatch:

env:
  NODE_VERSION: '23'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      build_required: ${{ steps.check.outputs.build_required }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for path filtering

      - name: Check for relevant changes
        id: check
        run: |
          echo "Comparing changes with previous commit"
          # Verify we can get the previous commit
          if git rev-parse HEAD^ &>/dev/null; then
            # Get the previous commit on main
            PREVIOUS_COMMIT=$(git rev-parse HEAD^)
            CURRENT_COMMIT=$(git rev-parse HEAD)
            CHANGED_FILES=$(git diff --name-only $PREVIOUS_COMMIT $CURRENT_COMMIT)

            echo "Changed files: $CHANGED_FILES"

            # Determine if build is required - simplified approach for reliability
            NEEDS_BUILD=false

            for file in $CHANGED_FILES; do
              # Check if file is important for build
              if [[ "$file" == src/* ]] ||
                [[ "$file" == *.config.* ]] ||
                [[ "$file" == package.json ]] ||
                [[ "$file" == pnpm-lock.yaml ]]; then
                echo "Build trigger: $file"
                NEEDS_BUILD=true
                break
              fi
            done

            if [[ "$NEEDS_BUILD" == "true" ]]; then
              echo "Build required: YES - changes detected in build-related files"
            else
              echo "Build required: NO - no changes in build-related files"
            fi
          else
            echo "This appears to be the first commit or we can't access commit history."
            echo "Building as a precaution."
            NEEDS_BUILD=true
          fi

          echo "build_required=$NEEDS_BUILD" >> $GITHUB_OUTPUT

  build:
    needs: [check-changes]
    if: needs.check-changes.outputs.build_required == 'true'
    uses: ./.github/workflows/shared-build.yml
    with:
      node_version: '23'

  deploy:
    needs: [build]
    if: success()
    runs-on: ubuntu-latest

    steps:

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Download build info (for debugging)
        uses: actions/download-artifact@v4
        with:
          name: build-info
          path: build-info

      - name: Display build info
        run: cat build-info/build-details.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      # Complete configuration for GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        # Uncomment the following line and configure the permission if you prefer to use this method
        # uses: JamesIves/github-pages-deploy-action@v4
        # with:
        #   folder: dist
        #   branch: gh-pages
        # Or use the native GitHub Pages method (requires additional configuration)
        run: |
          echo "Deployment completed to GitHub Pages"
          echo "URL: https://$(echo ${{ github.repository }} | cut -d'/' -f2).github.io/"

      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** New build deployed" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
